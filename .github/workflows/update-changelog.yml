name: Update CHANGELOG

on:
  push:
    tags:
      - "v*"

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_latest_tag
        run: echo "LATEST_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Get previous tag
        id: get_previous_tag
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${{ steps.get_latest_tag.outputs.LATEST_TAG }}^ 2>/dev/null || echo "")
          echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: generate_changelog
        run: |
          if [ -z "${{ steps.get_previous_tag.outputs.PREVIOUS_TAG }}" ]; then
            # 첫 번째 태그인 경우
            git log --pretty=format:"* %s (%h) @%an" ${{ steps.get_latest_tag.outputs.LATEST_TAG }} >> temp_changelog.txt
          else
            # 이전 태그가 있는 경우
            git log --pretty=format:"* %s (%h) @%an" ${{ steps.get_previous_tag.outputs.PREVIOUS_TAG }}..${{ steps.get_latest_tag.outputs.LATEST_TAG }} >> temp_changelog.txt
          fi

      - name: Update CHANGELOG.md
        run: |
          # 새로운 CHANGELOG 내용 생성
          echo "## ${{ steps.get_latest_tag.outputs.LATEST_TAG }} ($(date +'%Y-%m-%d'))" > new_changelog.txt
          echo "" >> new_changelog.txt
          cat temp_changelog.txt >> new_changelog.txt
          echo "" >> new_changelog.txt

          # 기존 CHANGELOG.md가 있다면 추가
          if [ -f CHANGELOG.md ]; then
            cat CHANGELOG.md >> new_changelog.txt
          fi

          # 임시 파일을 실제 파일로 이동
          mv new_changelog.txt CHANGELOG.md

          # 임시 파일 삭제
          rm -f temp_changelog.txt

      - name: Update version.ts
        run: |
          # 태그에서 'v' 제거
          VERSION=${GITHUB_REF#refs/tags/v}
          # version.ts 파일 업데이트
          echo "const APP_VERSION = \"$VERSION\";" > version.ts

      - name: Git Commit and Push
        uses: somaz94/go-git-commit-action@v1
        with:
          repository: ${{ github.repository }}
          branch: main
          commit_message: "docs: update CHANGELOG.md and version.ts for ${{ steps.get_latest_tag.outputs.LATEST_TAG }}"
          user_email: "action@github.com"
          user_name: "GitHub Action"
          file_pattern: "CHANGELOG.md version.ts"
